var u=Object.defineProperty;var m=i=>u(i,"__esModule",{value:!0});var v=(i,e)=>{for(var t in e)u(i,t,{get:e[t],enumerable:!0})};m(exports);v(exports,{FuncWork:()=>w});var n=i=>typeof i=="function",p=()=>`${Date.now}Math.random().toString().slice(10, 15)`;var w=class{genCodeString(e){return`(function(){return ${Function.prototype.toString.call(e)}})()`}updateWorker(e){this.worker.postMessage(JSON.stringify(e))}terminate(){URL.revokeObjectURL(this.scriptUrl),this.scriptUrl="",this.worker&&this.worker.terminate()}constructor(e){if(!window)throw new Error("Detected not in browser environment.");if(!window.Worker)throw new Error("Web Worker is not supported in the environment.");if(!window.URL&&!URL.createObjectURL)throw new Error("URL API is not supported in the environment.");if(!window.Promise)throw new Error("Promise Feature is not supported in the environment.");this.methodSet=new Set,this.scriptUrl=URL.createObjectURL(new Blob([`(()=>{var d=(e,a)=>()=>(a||(a={exports:{}},e(a.exports,a)),a.exports);var n=d((exports,module)=>{var methodsMap={};function invoke(e,a,o){try{if(!methodsMap[e])throw new Error("function "+e+" is not registered.");var s=methodsMap[e].apply(null,a);Promise.resolve(s).then(function(t){self.postMessage(JSON.stringify({data:t,name:e,id:o}))}).catch(function(t){throw t})}catch(r){throw r}}self.onmessage=function(e){var data=JSON.parse(e.data),type=data.type,name=data.name;switch(type){case"add":methodsMap[name]=eval(data.code);break;case"remove":methodsMap[name]&&delete methodsMap[name];break;case"clear":methodsMap={};break;case"invoke":var params=data.params,id=data.id;invoke(name,params,id);break}}});n();})();
`])),this.worker=new Worker(this.scriptUrl,e)}add(...e){return e.forEach((t,o)=>{if(!n(t)){console.warn(`Registration failed, methods[${o}] is not a Function type.`);return}let r=t.name;if(!r||r.trim()===""){console.warn(`Registration failed, methods[${o}] is a anonymous function.`);return}if(this.methodSet.has(r)){console.warn(`Registration failed, methods[${o}] is already registered.`);return}this.methodSet.add(r),this.updateWorker({name:r,type:"add",code:this.genCodeString(t)})}),this}remove(e){n(e)&&(e=e.name),!!this.methodSet.has(e)&&(this.methodSet.delete(e),this.updateWorker({type:"remove",name:e}))}clear(){this.methodSet.clear(),this.updateWorker({type:"clear"})}list(){let e=[];return this.methodSet.forEach(t=>{e.push(t)}),e.join(" | ")}invoke(e,t){if(n(e)&&(e=e.name),!this.methodSet.has(e))throw new Error(`${e} is not defined in Funcwork.`);let o=p();return new Promise((r,c)=>{let s=d=>{this.worker.removeEventListener("message",s),this.worker.removeEventListener("error",a);try{let{id:h,data:g}=JSON.parse(d.data);h===o&&r(g)}catch(h){c(h)}},a=d=>{this.worker.removeEventListener("message",s),this.worker.removeEventListener("error",a),c(d)};this.worker.addEventListener("message",s),this.worker.addEventListener("error",a),this.updateWorker({type:"invoke",name:e,params:Array.isArray(t)?t:[t],id:o})})}destroy(){this.terminate(),this.clear()}};
//# sourceMappingURL=index.js.map
